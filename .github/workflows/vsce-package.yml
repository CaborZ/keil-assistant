name: Build vsce package

on:
  workflow_dispatch:
  push:
    tags:
      - v*
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install VSCE
        run: npm install -g vsce

      - name: Install dependencies
        run: yarn install

      - name: Set release type
        id: release-type
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [[ "$TAG_NAME" == *"pre"* ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
            echo "release_type=preRelease" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
            echo "release_type=Release" >> $GITHUB_OUTPUT
          fi

      - name: Build package
        run: |
          if [[ "${{ steps.release-type.outputs.is_prerelease }}" == "true" ]]; then
            vsce package --yarn --pre-release
          else
            vsce package --yarn
          fi

      - name: Extract Release Notes from CHANGELOG.md
        if: success()
        run: |
          VERSION=$(jq -r .version package.json)
          awk "/^## \[v${VERSION}\]/ {flag=1; next} /^## \[/ {flag=0} flag" CHANGELOG.md > RELEASE_BODY.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: success() && github.ref_type == 'tag'
        with:
          body_path: RELEASE_BODY.md
          draft: false
          prerelease: ${{ steps.release-type.outputs.is_prerelease }}
          files: keil-vscode-assistant-*.vsix
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Marketplace
        if: success() && github.ref_type == 'tag'
        run: |
          if [[ "${{ steps.release-type.outputs.is_prerelease }}" == "true" ]]; then
            npx vsce publish --pre-release -p ${{ secrets.VSCE_PAT }}
          else
            npx vsce publish -p ${{ secrets.VSCE_PAT }}
          fi
