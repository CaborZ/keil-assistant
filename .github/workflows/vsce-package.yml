name: Build vsce package

on:
  workflow_dispatch:

  push:
    tags:
      - v*
  release:
    types:
    - created

jobs:
  build:
    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
        
    runs-on: ${{ matrix.os }}
    # runs-on: ubuntu-latest 

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          
      - run: npm install
      
      - run: xvfb-run -a npm test
        if: runner.os == 'Linux'
        
      - run: npm test
        if: runner.os != 'Linux'

      - name: Set env RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Set env VERSION
        run: echo "VERSION=$(grep version package.json | sed -r 's/",/"/' |  sed 's/"//g' | sed 's/[[:space:]]*version:[[:space:]]*//1')" >> $GITHUB_ENV

      - name: Install vsce
        run: npm install @vscode/vsce --save-dev

      - name: Build
        run: vsce package --no-yarn
        # run: yarn vsce-packge

      # - name: Create pkg dist dir
      #   run: mkdir pkg-dist

      # - name: Move
      #   run: mv keil-vscode-assistant-${{ env.VERSION }}.vsix pkg-dist/

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: build-result
      #     path: |
      #       pkg-dist

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          prerelease: false
          append_body: true
          files: |
            keil-vscode-assistant-${{ env.VERSION }}.vsix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Publish
        if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        run: npm run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
